// Generated by Dagger (https://dagger.dev).
package com.sagoss.validationtesting.utils.moduleinjector;

import android.content.Context;
import com.sagoss.validationtesting.database.ValidationDatabase;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import javax.inject.Provider;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class ModuleInjector_ProvideValidationDatabaseFactory implements Factory<ValidationDatabase> {
  private final ModuleInjector module;

  private final Provider<Context> appContextProvider;

  public ModuleInjector_ProvideValidationDatabaseFactory(ModuleInjector module,
      Provider<Context> appContextProvider) {
    this.module = module;
    this.appContextProvider = appContextProvider;
  }

  @Override
  public ValidationDatabase get() {
    return provideValidationDatabase(module, appContextProvider.get());
  }

  public static ModuleInjector_ProvideValidationDatabaseFactory create(ModuleInjector module,
      Provider<Context> appContextProvider) {
    return new ModuleInjector_ProvideValidationDatabaseFactory(module, appContextProvider);
  }

  public static ValidationDatabase provideValidationDatabase(ModuleInjector instance,
      Context appContext) {
    return Preconditions.checkNotNullFromProvides(instance.provideValidationDatabase(appContext));
  }
}
