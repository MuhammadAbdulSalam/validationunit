// Generated by Dagger (https://dagger.dev).
package com.sagoss.validationtesting.utils.moduleinjector;

import com.sagoss.validationtesting.database.dao.RequestDao;
import com.sagoss.validationtesting.database.dao.VoucherDao;
import com.sagoss.validationtesting.database.repository.DBRepository;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import javax.inject.Provider;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class ModuleInjector_ProvideValidationDBRepositoryFactory implements Factory<DBRepository> {
  private final ModuleInjector module;

  private final Provider<VoucherDao> voucherDaoProvider;

  private final Provider<RequestDao> requestDaoProvider;

  public ModuleInjector_ProvideValidationDBRepositoryFactory(ModuleInjector module,
      Provider<VoucherDao> voucherDaoProvider, Provider<RequestDao> requestDaoProvider) {
    this.module = module;
    this.voucherDaoProvider = voucherDaoProvider;
    this.requestDaoProvider = requestDaoProvider;
  }

  @Override
  public DBRepository get() {
    return provideValidationDBRepository(module, voucherDaoProvider.get(), requestDaoProvider.get());
  }

  public static ModuleInjector_ProvideValidationDBRepositoryFactory create(ModuleInjector module,
      Provider<VoucherDao> voucherDaoProvider, Provider<RequestDao> requestDaoProvider) {
    return new ModuleInjector_ProvideValidationDBRepositoryFactory(module, voucherDaoProvider, requestDaoProvider);
  }

  public static DBRepository provideValidationDBRepository(ModuleInjector instance,
      VoucherDao voucherDao, RequestDao requestDao) {
    return Preconditions.checkNotNullFromProvides(instance.provideValidationDBRepository(voucherDao, requestDao));
  }
}
