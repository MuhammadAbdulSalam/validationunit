// Generated by data binding compiler. Do not edit!
package com.sagoss.validationtesting.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.databinding.Bindable;
import androidx.databinding.DataBindingUtil;
import androidx.databinding.ViewDataBinding;
import com.sagoss.validationtesting.R;
import com.sagoss.validationtesting.api.models.config.DateToFixed;
import java.lang.Deprecated;
import java.lang.Object;

public abstract class LayoutDateToFixedHotelItemBinding extends ViewDataBinding {
  @NonNull
  public final CardView itemCardView;

  @Bindable
  protected View.OnClickListener mClickListener;

  @Bindable
  protected DateToFixed mModel;

  protected LayoutDateToFixedHotelItemBinding(Object _bindingComponent, View _root,
      int _localFieldCount, CardView itemCardView) {
    super(_bindingComponent, _root, _localFieldCount);
    this.itemCardView = itemCardView;
  }

  public abstract void setClickListener(@Nullable View.OnClickListener clickListener);

  @Nullable
  public View.OnClickListener getClickListener() {
    return mClickListener;
  }

  public abstract void setModel(@Nullable DateToFixed model);

  @Nullable
  public DateToFixed getModel() {
    return mModel;
  }

  @NonNull
  public static LayoutDateToFixedHotelItemBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup root, boolean attachToRoot) {
    return inflate(inflater, root, attachToRoot, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.inflate(inflater, R.layout.layout_date_to_fixed_hotel_item, root, attachToRoot, component)
   */
  @NonNull
  @Deprecated
  public static LayoutDateToFixedHotelItemBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup root, boolean attachToRoot, @Nullable Object component) {
    return ViewDataBinding.<LayoutDateToFixedHotelItemBinding>inflateInternal(inflater, R.layout.layout_date_to_fixed_hotel_item, root, attachToRoot, component);
  }

  @NonNull
  public static LayoutDateToFixedHotelItemBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.inflate(inflater, R.layout.layout_date_to_fixed_hotel_item, null, false, component)
   */
  @NonNull
  @Deprecated
  public static LayoutDateToFixedHotelItemBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable Object component) {
    return ViewDataBinding.<LayoutDateToFixedHotelItemBinding>inflateInternal(inflater, R.layout.layout_date_to_fixed_hotel_item, null, false, component);
  }

  public static LayoutDateToFixedHotelItemBinding bind(@NonNull View view) {
    return bind(view, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.bind(view, component)
   */
  @Deprecated
  public static LayoutDateToFixedHotelItemBinding bind(@NonNull View view,
      @Nullable Object component) {
    return (LayoutDateToFixedHotelItemBinding)bind(component, view, R.layout.layout_date_to_fixed_hotel_item);
  }
}
